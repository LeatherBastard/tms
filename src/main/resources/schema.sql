DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS tasks CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS user_roles CASCADE;
DROP TABLE IF EXISTS roles CASCADE;

CREATE TABLE roles(
      id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
      name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE users(
  id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY  PRIMARY KEY,
    username VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL UNIQUE,
    password VARCHAR(5000) NOT NULL UNIQUE
);

CREATE TABLE user_roles(
    id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE
);

CREATE TABLE tasks(
      id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
      title VARCHAR(250) NOT NULL,
      description VARCHAR(2000) NOT NULL,
      status VARCHAR(10),
      priority VARCHAR(10),
      author_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
      executor_id INTEGER REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE comments(
     id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
     task_id INTEGER REFERENCES tasks(id) ON DELETE CASCADE,
     user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
     text VARCHAR(500) NOT NULL,
     created TIMESTAMP NOT NULL
);



